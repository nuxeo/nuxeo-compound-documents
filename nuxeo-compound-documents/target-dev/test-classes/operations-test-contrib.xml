<?xml version="1.0"?>
<component name="org.nuxeo.compound.documents.operations.customisation.test" version="1.0">
  <require>org.nuxeo.compound.documents.operations</require>
  <require>org.nuxeo.compound.documents.types</require>
  <extension target="org.nuxeo.automation.scripting.internals.AutomationScriptingComponent" point="operation">
    <scriptedOperation id="javascript.GetCompoundDocumentType">
      <inputType>document</inputType>
      <outputType>string</outputType>
      <category>javascript</category>
      <param name="entries" type="strings" />
      <script>
        <![CDATA[
        function run(input, params) {
          for (var i = 0; i < params.entries.length; i++) {
            if (params.entries[i] === "a.txt") {
              return "CustomCompoundDocument";
            }
          }
          return "CompoundDocument";
        }]]>
      </script>
    </scriptedOperation>
    <scriptedOperation id="javascript.GetCompoundDocumentFolderType">
      <inputType>document</inputType>
      <outputType>string</outputType>
      <category>javascript</category>
      <script>
        function run(input) {
          if (input.type === "CustomCompoundDocument") {
            return "CustomCompoundDocumentFolder";
          }
          return "CompoundDocumentFolder";
        }
      </script>
    </scriptedOperation>
    <scriptedOperation id="javascript.GetCompoundDocumentPreview">
      <inputType>document</inputType>
      <outputType>document</outputType>
      <category>javascript</category>
      <description>Returns the compound document preview based on the given document.</description>
      <script>
        function run(input) {
          var query = "Select * FROM Document Where ecm:isVersion = 0 AND ecm:isProxy = 0 AND ecm:isTrashed = 0 AND ecm:ancestorId = '"+input.id+"'";
          var children = Repository.Query(input, {
            'query': query
          });
          children.forEach(function(item) {
            var blob = item['file:content'];
            if (!blob) {
              return;
            }
            if (blob.filename.startsWith('preview')) {
              input['cp:preview'] = item.id;
            }
          });
          input = Document.Save(input, {});
          return input;
        }
      </script>
    </scriptedOperation>
  </extension>
  <extension target="org.nuxeo.ecm.core.schema.TypeService" point="doctype">
    <doctype name="CustomCompoundDocument" extends="Document">
      <schema name="dublincore" />
      <facet name="CompoundDocument" />
      <facet name="Folderish" />
    </doctype>
    <doctype name="CustomCompoundDocumentFolder" extends="Document">
      <schema name="dublincore" />
      <facet name="Folderish" />
    </doctype>
  </extension>
</component>
